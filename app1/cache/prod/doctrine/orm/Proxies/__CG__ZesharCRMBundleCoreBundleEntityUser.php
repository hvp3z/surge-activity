<?php

namespace Proxies\__CG__\ZesharCRM\Bundle\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \ZesharCRM\Bundle\CoreBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'assignedLeads', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'createdLeads', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'assignedActivities', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'createdActivities', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'widgetsData', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'performedOperations', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'performedMilestoneOperations', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'performedActions', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'assignedCallReports', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'company', 'leadCategories', 'leadEventTypes', 'leadSources', 'leadTypes', 'payments', 'creditCards', 'billingInfo', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'disabled', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'assignedOpportunities', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'createdOpportunities', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'lspCode', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'locked', 'expired', 'expiresAt', 'roles', 'credentialsExpired', 'credentialsExpireAt');
        }

        return array('__isInitialized__', 'id', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'assignedLeads', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'createdLeads', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'assignedActivities', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'createdActivities', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'widgetsData', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'performedOperations', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'performedMilestoneOperations', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'performedActions', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'assignedCallReports', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'company', 'leadCategories', 'leadEventTypes', 'leadSources', 'leadTypes', 'payments', 'creditCards', 'billingInfo', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'disabled', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'assignedOpportunities', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'createdOpportunities', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\User' . "\0" . 'lspCode', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'locked', 'expired', 'expiresAt', 'roles', 'credentialsExpired', 'credentialsExpireAt');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssignedLead(\ZesharCRM\Bundle\CoreBundle\Entity\Lead $assignedLeads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssignedLead', array($assignedLeads));

        return parent::addAssignedLead($assignedLeads);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssignedLead(\ZesharCRM\Bundle\CoreBundle\Entity\Lead $assignedLeads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssignedLead', array($assignedLeads));

        return parent::removeAssignedLead($assignedLeads);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssignedLeads()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssignedLeads', array());

        return parent::getAssignedLeads();
    }

    /**
     * {@inheritDoc}
     */
    public function addCreatedLead(\ZesharCRM\Bundle\CoreBundle\Entity\Lead $createdLeads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCreatedLead', array($createdLeads));

        return parent::addCreatedLead($createdLeads);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCreatedLead(\ZesharCRM\Bundle\CoreBundle\Entity\Lead $createdLeads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCreatedLead', array($createdLeads));

        return parent::removeCreatedLead($createdLeads);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedLeads()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedLeads', array());

        return parent::getCreatedLeads();
    }

    /**
     * {@inheritDoc}
     */
    public function getLspCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLspCode', array());

        return parent::getLspCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setLspCode($lspCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLspCode', array($lspCode));

        return parent::setLspCode($lspCode);
    }

    /**
     * {@inheritDoc}
     */
    public function addAssignedOpportunity(\ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $assignedOpportunities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssignedOpportunity', array($assignedOpportunities));

        return parent::addAssignedOpportunity($assignedOpportunities);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssignedOpportunity(\ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $assignedOpportunities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssignedOpportunity', array($assignedOpportunities));

        return parent::removeAssignedOpportunity($assignedOpportunities);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssignedOpportunities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssignedOpportunities', array());

        return parent::getAssignedOpportunities();
    }

    /**
     * {@inheritDoc}
     */
    public function addCreatedOpportunity(\ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $createdOpportunities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCreatedOpportunity', array($createdOpportunities));

        return parent::addCreatedOpportunity($createdOpportunities);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCreatedOpportunity(\ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $createdOpportunities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCreatedOpportunity', array($createdOpportunities));

        return parent::removeCreatedOpportunity($createdOpportunities);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOpportunities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOpportunities', array());

        return parent::getCreatedOpportunities();
    }

    /**
     * {@inheritDoc}
     */
    public function setWidgetsData($widgetsData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidgetsData', array($widgetsData));

        return parent::setWidgetsData($widgetsData);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidgetsData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidgetsData', array());

        return parent::getWidgetsData();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssignedActivity(\ZesharCRM\Bundle\CoreBundle\Entity\Activity $assignedActivities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssignedActivity', array($assignedActivities));

        return parent::addAssignedActivity($assignedActivities);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssignedActivity(\ZesharCRM\Bundle\CoreBundle\Entity\Activity $assignedActivities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssignedActivity', array($assignedActivities));

        return parent::removeAssignedActivity($assignedActivities);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssignedActivities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssignedActivities', array());

        return parent::getAssignedActivities();
    }

    /**
     * {@inheritDoc}
     */
    public function addCreatedActivity(\ZesharCRM\Bundle\CoreBundle\Entity\Activity $createdActivities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCreatedActivity', array($createdActivities));

        return parent::addCreatedActivity($createdActivities);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCreatedActivity(\ZesharCRM\Bundle\CoreBundle\Entity\Activity $createdActivities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCreatedActivity', array($createdActivities));

        return parent::removeCreatedActivity($createdActivities);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedActivities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedActivities', array());

        return parent::getCreatedActivities();
    }

    /**
     * {@inheritDoc}
     */
    public function addPerformedOperation(\ZesharCRM\Bundle\CoreBundle\Entity\Operation $performedOperations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPerformedOperation', array($performedOperations));

        return parent::addPerformedOperation($performedOperations);
    }

    /**
     * {@inheritDoc}
     */
    public function addPerformedMilestoneOperation(\ZesharCRM\Bundle\CoreBundle\Entity\MilestoneOperation $performedMilestoneOperation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPerformedMilestoneOperation', array($performedMilestoneOperation));

        return parent::addPerformedMilestoneOperation($performedMilestoneOperation);
    }

    /**
     * {@inheritDoc}
     */
    public function removePerformedOperation(\ZesharCRM\Bundle\CoreBundle\Entity\Operation $performedOperations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePerformedOperation', array($performedOperations));

        return parent::removePerformedOperation($performedOperations);
    }

    /**
     * {@inheritDoc}
     */
    public function removePerformedMilestoneOperation(\ZesharCRM\Bundle\CoreBundle\Entity\MilestoneOperation $performedMilestoneOperation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePerformedMilestoneOperation', array($performedMilestoneOperation));

        return parent::removePerformedMilestoneOperation($performedMilestoneOperation);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerformedOperations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerformedOperations', array());

        return parent::getPerformedOperations();
    }

    /**
     * {@inheritDoc}
     */
    public function getPerformedMilestoneOperation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerformedMilestoneOperation', array());

        return parent::getPerformedMilestoneOperation();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerformedActions($performedActions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerformedActions', array($performedActions));

        return parent::setPerformedActions($performedActions);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerformedActions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerformedActions', array());

        return parent::getPerformedActions();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssignedCallReport(\ZesharCRM\Bundle\CallsBundle\Entity\CallReporting $assignedCallReports)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssignedCallReport', array($assignedCallReports));

        return parent::addAssignedCallReport($assignedCallReports);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssignedCallReport(\ZesharCRM\Bundle\CallsBundle\Entity\CallReporting $assignedCallReports)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssignedCallReport', array($assignedCallReports));

        return parent::removeAssignedCallReport($assignedCallReports);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssignedCallReports()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssignedCallReports', array());

        return parent::getAssignedCallReports();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany($company)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', array($company));

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', array());

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function addLeadCategory(\ZesharCRM\Bundle\CoreBundle\Entity\LeadCategory $leadCategories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLeadCategory', array($leadCategories));

        return parent::addLeadCategory($leadCategories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLeadCategory(\ZesharCRM\Bundle\CoreBundle\Entity\LeadCategory $leadCategories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLeadCategory', array($leadCategories));

        return parent::removeLeadCategory($leadCategories);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeadCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeadCategories', array());

        return parent::getLeadCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addLeadEventType(\ZesharCRM\Bundle\CoreBundle\Entity\LeadEventType $leadEventTypes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLeadEventType', array($leadEventTypes));

        return parent::addLeadEventType($leadEventTypes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLeadEventType(\ZesharCRM\Bundle\CoreBundle\Entity\LeadEventType $leadEventTypes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLeadEventType', array($leadEventTypes));

        return parent::removeLeadEventType($leadEventTypes);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeadEventTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeadEventTypes', array());

        return parent::getLeadEventTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function addLeadSource(\ZesharCRM\Bundle\CoreBundle\Entity\LeadSource $leadSources)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLeadSource', array($leadSources));

        return parent::addLeadSource($leadSources);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLeadSource(\ZesharCRM\Bundle\CoreBundle\Entity\LeadSource $leadSources)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLeadSource', array($leadSources));

        return parent::removeLeadSource($leadSources);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeadSources()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeadSources', array());

        return parent::getLeadSources();
    }

    /**
     * {@inheritDoc}
     */
    public function addLeadType(\ZesharCRM\Bundle\CoreBundle\Entity\LeadType $leadTypes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLeadType', array($leadTypes));

        return parent::addLeadType($leadTypes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLeadType(\ZesharCRM\Bundle\CoreBundle\Entity\LeadType $leadTypes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLeadType', array($leadTypes));

        return parent::removeLeadType($leadTypes);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeadTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeadTypes', array());

        return parent::getLeadTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function addPayment(\ZesharCRM\Bundle\CoreBundle\Entity\PaymentHistory $payments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPayment', array($payments));

        return parent::addPayment($payments);
    }

    /**
     * {@inheritDoc}
     */
    public function removePayment(\ZesharCRM\Bundle\CoreBundle\Entity\PaymentHistory $payments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePayment', array($payments));

        return parent::removePayment($payments);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayments', array());

        return parent::getPayments();
    }

    /**
     * {@inheritDoc}
     */
    public function addCreditCard(\ZesharCRM\Bundle\CoreBundle\Entity\CreditCard $creditCards)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCreditCard', array($creditCards));

        return parent::addCreditCard($creditCards);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCreditCard(\ZesharCRM\Bundle\CoreBundle\Entity\PaymentHistory $creditCards)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCreditCard', array($creditCards));

        return parent::removeCreditCard($creditCards);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditCards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditCards', array());

        return parent::getCreditCards();
    }

    /**
     * {@inheritDoc}
     */
    public function addBillingInfo(\ZesharCRM\Bundle\CoreBundle\Entity\BillingInfo $billingInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBillingInfo', array($billingInfo));

        return parent::addBillingInfo($billingInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBillingInfo(\ZesharCRM\Bundle\CoreBundle\Entity\BillingInfo $billingInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBillingInfo', array($billingInfo));

        return parent::removeBillingInfo($billingInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function getBillingInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillingInfo', array());

        return parent::getBillingInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($lastName));

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisabled', array());

        return parent::getDisabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisabled($disabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisabled', array($disabled));

        return parent::setDisabled($disabled);
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($role));

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', array());

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', array($serialized));

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernameCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernameCanonical', array());

        return parent::getUsernameCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailCanonical', array());

        return parent::getEmailCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', array());

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', array());

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmationToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmationToken', array());

        return parent::getConfirmationToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', array($role));

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', array());

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', array());

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', array());

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsExpired', array());

        return parent::isCredentialsExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', array());

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpired', array());

        return parent::isExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLocked', array());

        return parent::isLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isSuperAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSuperAdmin', array());

        return parent::isSuperAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function isUser(\FOS\UserBundle\Model\UserInterface $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUser', array($user));

        return parent::isUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($role));

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsernameCanonical($usernameCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsernameCanonical', array($usernameCanonical));

        return parent::setUsernameCanonical($usernameCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentialsExpireAt(\DateTime $date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentialsExpireAt', array($date));

        return parent::setCredentialsExpireAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentialsExpired($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentialsExpired', array($boolean));

        return parent::setCredentialsExpired($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailCanonical($emailCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailCanonical', array($emailCanonical));

        return parent::setEmailCanonical($emailCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', array($boolean));

        return parent::setEnabled($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setExpired($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpired', array($boolean));

        return parent::setExpired($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiresAt(\DateTime $date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiresAt', array($date));

        return parent::setExpiresAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setSuperAdmin($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuperAdmin', array($boolean));

        return parent::setSuperAdmin($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', array($password));

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin(\DateTime $time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', array($time));

        return parent::setLastLogin($time);
    }

    /**
     * {@inheritDoc}
     */
    public function setLocked($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocked', array($boolean));

        return parent::setLocked($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmationToken($confirmationToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmationToken', array($confirmationToken));

        return parent::setConfirmationToken($confirmationToken);
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordRequestedAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordRequestedAt', array($date));

        return parent::setPasswordRequestedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordRequestedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordRequestedAt', array());

        return parent::getPasswordRequestedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isPasswordRequestNonExpired($ttl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPasswordRequestNonExpired', array($ttl));

        return parent::isPasswordRequestNonExpired($ttl);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', array($roles));

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', array());

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNames', array());

        return parent::getGroupNames();
    }

    /**
     * {@inheritDoc}
     */
    public function hasGroup($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasGroup', array($name));

        return parent::hasGroup($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', array($group));

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', array($group));

        return parent::removeGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
