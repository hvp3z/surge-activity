<?php

namespace Proxies\__CG__\ZesharCRM\Bundle\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BillingInfo extends \ZesharCRM\Bundle\CoreBundle\Entity\BillingInfo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'id', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'frequency', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'effectiveDate', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'expirationDate', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'subscriptionStatus', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'license', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'credit', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'creator', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'subscriptionProduct', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'subscriptionId');
        }

        return array('__isInitialized__', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'id', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'frequency', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'effectiveDate', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'expirationDate', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'subscriptionStatus', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'license', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'credit', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'creator', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'subscriptionProduct', '' . "\0" . 'ZesharCRM\\Bundle\\CoreBundle\\Entity\\BillingInfo' . "\0" . 'subscriptionId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BillingInfo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrequency($frequency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrequency', array($frequency));

        return parent::setFrequency($frequency);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrequency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrequency', array());

        return parent::getFrequency();
    }

    /**
     * {@inheritDoc}
     */
    public function setEffectiveDate($effectiveDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEffectiveDate', array($effectiveDate));

        return parent::setEffectiveDate($effectiveDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEffectiveDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEffectiveDate', array());

        return parent::getEffectiveDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpirationDate($expirationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpirationDate', array($expirationDate));

        return parent::setExpirationDate($expirationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationDate', array());

        return parent::getExpirationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscriptionProduct($subscriptionProduct)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscriptionProduct', array($subscriptionProduct));

        return parent::setSubscriptionProduct($subscriptionProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptionProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptionProduct', array());

        return parent::getSubscriptionProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscriptionStatus($subscriptionStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscriptionStatus', array($subscriptionStatus));

        return parent::setSubscriptionStatus($subscriptionStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptionStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptionStatus', array());

        return parent::getSubscriptionStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicense($license)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicense', array($license));

        return parent::setLicense($license);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicense()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicense', array());

        return parent::getLicense();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredit($credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredit', array($credit));

        return parent::setCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredit', array());

        return parent::getCredit();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', array());

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator($creator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', array($creator));

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptionId', array());

        return parent::getSubscriptionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscriptionId($subscriptionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscriptionId', array($subscriptionId));

        return parent::setSubscriptionId($subscriptionId);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptionStatusString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptionStatusString', array());

        return parent::getSubscriptionStatusString();
    }

}
