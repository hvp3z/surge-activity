<?php

namespace ZesharCRM\Bundle\GoalsBundle\Repository;

use Doctrine\ORM\EntityRepository;
use ZesharCRM\Bundle\CoreBundle\Enum\GoalStatus;

/**
 * GoalAssignmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GoalAssignmentRepository extends EntityRepository
{
    public function assignGoal($user)
    {
        $roles = $user->getRoles();
        $company = $user->getCompany();
        if(in_array('ROLE_SUPER_ADMIN', $roles)){
            $isAll = true;
        }else{
            $isAll = false;
        }
        $currentTime = new \DateTime();
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('v')
            ->addSelect('g')
            ->from('ZesharCRMGoalsBundle:GoalAssignment', 'v')
            ->join('v.goal', 'g')
            ->andWhere('g.startsAt <= :currentTime','g.finishesAt > :currentTime')
            ->leftJoin('v.assignee' , 'u')
            ->andWhere('u.company = :company')
            ->setParameters(array('currentTime' => $currentTime, 'company' => $company)); // if you add andWhere g.status = GoalStatus:OPEN -> sales in need widget will brake
        if(!$isAll){
            $qb
                ->andWhere('v.assignee ='.$user->getId())
            ;
        }
        return  $qb->getQuery()->getResult();
    }

    public function assignGoalByUser($user, $goal)
    {
        $currentTime = new \DateTime();
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('v')
            ->addSelect('g')
            ->from('ZesharCRMGoalsBundle:GoalAssignment', 'v')
            ->join('v.goal', 'g')
            ->andWhere('v.status = :status', 'g.startsAt <= :currentTime','g.finishesAt > :currentTime')
            ->andWhere('v.assignee = :user')
            ->andWhere('v.goal = :goal')
            ->setParameters(array('currentTime' => $currentTime, 'status' => GoalStatus::OPEN, 'user' => $user->getId(), 'goal' => $goal->getId()));

        return  $qb->getQuery()->getResult();
    }

    public function findFailGoal()
    {
        $currentTime = new \DateTime();
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('v')
            ->addSelect('g')
            ->from('ZesharCRMGoalsBundle:GoalAssignment', 'v')
            ->join('v.goal', 'g')
            ->andWhere('v.status = :status','g.finishesAt <= :currentTime')
            ->setParameters(array('status' => GoalStatus::OPEN, 'currentTime' => $currentTime));
        return  $qb->getQuery()->getResult();
    }

    public function yearUserGoal($user)
    {
        $startTime = new \DateTime('first day of January this year');
        $endTime = new \DateTime('first day of January next year');
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('v')
            ->addSelect('g')
            ->from('ZesharCRMGoalsBundle:GoalAssignment', 'v')
            ->join('v.goal', 'g')
            ->andWhere('v.assignee = :user', 'g.startsAt >= :startTime','g.startsAt < :endTime')
            ->setParameters(array('user' => $user, 'startTime' => $startTime, 'endTime' => $endTime));
        return  $qb->getQuery()->getResult();
    }

    public function yearGoal()
    {
        $startTime = new \DateTime('first day of January this year');
        $endTime = new \DateTime('first day of January next year');
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('v')
            ->addSelect('g')
            ->from('ZesharCRMGoalsBundle:GoalAssignment', 'v')
            ->join('v.goal', 'g')
            ->andWhere('g.startsAt >= :startTime','g.startsAt < :endTime')
            ->setParameters(array('startTime' => $startTime, 'endTime' => $endTime));
        return  $qb->getQuery()->getResult();
    }

    public function getLeads($user, $type = null, $status = null)
    {
        $company = $user->getCompany();

        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('l')
            ->from('ZesharCRMCoreBundle:Lead', 'l')
            ->leftJoin('l.creator' , 'u')
            ->andWhere('u.company = :company')
            ->andWhere('l.status = :status')
            ->setParameters(array('company' => $company, 'status' => $status));
        ;

        if($type){
            $qb
                ->andWhere('l.leadType = :type')
                ->setParameter('type' , $type)
            ;
        }
        return  $qb->getQuery()->getResult();
    }

}
