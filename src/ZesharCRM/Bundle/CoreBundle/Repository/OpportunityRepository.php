<?php

namespace ZesharCRM\Bundle\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use ZesharCRM\Bundle\CoreBundle\Enum\OpportunityStatus;
use ZesharCRM\Bundle\CoreBundle\Entity\Opportunity;

/**
 * OpportunityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OpportunityRepository extends EntityRepository
{

    public function getOpportunitySalesData($userId) {
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('v')
            ->from('ZesharCRMCoreBundle:Opportunity', 'v')
            ->andWhere('v.assignee = :userId','v.status = :status')
            ->setParameters(array('userId' => $userId, 'status' => OpportunityStatus::PENDING_OPPORTUNITY));
        return  $qb->getQuery()->getResult();
    }

    /**
     * Convert  opportunity status from PENDING_OPPORTUNITY to PENDING_QUOTE
     * @return \ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $opportunity
     * @throws \BadMethodCallException When the opportunity was already in PENDING_QUOTE state
     */

    public function closeOpportunity(Opportunity $opportunity) {

        if (OpportunityStatus::PENDING_OPPORTUNITY !== $opportunity->getStatus()) {
            throw new \BadMethodCallException('This Opportunity was already closed.');
        }

        $em = $this->getEntityManager();

        $opportunity->setStatus(OpportunityStatus::PENDING_QUOTE);

        $em->flush($opportunity);

        return $opportunity;
    }

    /**
     * Convert  opportunity status from PENDING_OPPORTUNITY to WIN_BACK
     * @return \ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $opportunity
     * @throws \BadMethodCallException When the opportunity was already in WIN_BACK state
     */

    public function winBackQuote(Opportunity $opportunity) {

        $em = $this->getEntityManager();

        $opportunity->setStatus(OpportunityStatus::WIN_BACK);

        $em->flush($opportunity);

        return $opportunity;
    }

    /**
     * Convert  opportunity status from PENDING_QUOTE to SUCCESS_QUOTE
     * @return \ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $opportunity
     * @throws \BadMethodCallException When the opportunity was already closed
     */

    public function closeQuote(Opportunity $opportunity)
    {
        if (OpportunityStatus::PENDING_QUOTE !== $opportunity->getStatus()) {
            throw new \BadMethodCallException('This opportunity was already closed.');
        }

        $em = $this->getEntityManager();

        $opportunity->setStatus(OpportunityStatus::SUCCESS_QUOTE);

        $em->flush($opportunity);

        return $opportunity;
    }

    /**
     * Convert  opportunity status from PENDING_QUOTE to CANCELLED_QUOTE
     * @return \ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $opportunity
     * @throws \BadMethodCallException When the opportunity was already canceled
     */

    public function cancelQuote(Opportunity $opportunity)
    {
        if (OpportunityStatus::PENDING_QUOTE !== $opportunity->getStatus()) {
            throw new \BadMethodCallException('This quote was already cancelled.');
        }

        $em = $this->getEntityManager();

        $opportunity->setStatus(OpportunityStatus::CANCELLED_QUOTE);

        $em->flush($opportunity);

        return $opportunity;
    }

    /**
     * Convert  opportunity status from PENDING_OPPORTUNITY to CANCELLED_OPPORTUNITY
     * @return \ZesharCRM\Bundle\CoreBundle\Entity\Opportunity $opportunity
     * @throws \BadMethodCallException When the opportunity was already canceled
     */

    public function cancelOpportunity(Opportunity $opportunity)
    {
        if (OpportunityStatus::PENDING_OPPORTUNITY !== $opportunity->getStatus()) {
            throw new \BadMethodCallException('This opportunity was already cancelled.');
        }

        $em = $this->getEntityManager();

        $opportunity->setStatus(OpportunityStatus::CANCELLED_OPPORTUNITY);

        $em->flush($opportunity);

        return $opportunity;
    }

    public function fetchOpportunitiesByAssignee(\ZesharCRM\Bundle\CoreBundle\Entity\User $assignee, $count = 5)
    {
        $qb = $this
            ->getEntityManager()
            ->createQueryBuilder();
        $qb
            ->select('o')
            ->from('ZesharCRMCoreBundle:Opportunity', 'o')
            ->andWhere('o.assignee = :userId')
            ->andWhere($qb->expr()->in('o.status', array(
                OpportunityStatus::PENDING_OPPORTUNITY
            )))
            ->orderBy('o.updatedAt', 'DESC')
            ->setParameter('userId', $assignee->getId())
        ;
        return $qb->getQuery()->getResult();
    }
    
    public function fetchQuotesByAssignee(\ZesharCRM\Bundle\CoreBundle\Entity\User $assignee, $count = 5, $isAdmin = false)
    {
        $qb = $this
            ->getEntityManager()
            ->createQueryBuilder();
        $qb
            ->select('o')
            ->from('ZesharCRMCoreBundle:Opportunity', 'o')
            ->andWhere('o.assignee = :userId')
            ->andWhere($qb->expr()->in('o.status', array(
                OpportunityStatus::PENDING_QUOTE
            )))
            ->orderBy('o.updatedAt', 'DESC')
            ->setParameter('userId', $assignee->getId())
        ;
        return $qb->getQuery()->getResult();
    }
}